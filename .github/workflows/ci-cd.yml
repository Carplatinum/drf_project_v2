name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - homework
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Poetry
        uses: abatilo/actions-poetry@v4

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Cache Poetry virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (with dev)
        run: poetry install --with dev --no-interaction --no-ansi

      - name: Show Poetry environment info
        run: poetry env info

      - name: Activate virtualenv and run linting (flake8)
        run: |
          source $(poetry env info -p)/bin/activate
          flake8

      - name: Activate virtualenv and run tests (pytest)
        run: |
          source $(poetry env info -p)/bin/activate
          pytest -v

  docker-build:
    runs-on: ubuntu-latest
    needs: test-lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build backend Docker image
        run: docker build -t drf_project_backend -f Dockerfile.backend .

      - name: Build nginx Docker image
        run: docker build -t drf_project_nginx -f Dockerfile.nginx .

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Check docker compose version on server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "Checking docker-compose version on server..."
            if command -v docker-compose &> /dev/null; then
              docker-compose --version
            elif docker compose version &> /dev/null; then
              docker compose version
            else
              echo "docker-compose not found!"
              exit 1
            fi

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd ${{ secrets.DEPLOY_DIR }}
            git pull origin develop
            if docker compose version &> /dev/null; then
              docker compose pull
              docker compose up -d --build
            else
              docker-compose pull
              docker-compose up -d --build
            fi
